#!/usr/bin/bash
set -euo pipefail

# This script creates ggshield packages in various formats.
#
# It expects [nfpm][] and [shiv][] to be installed.
#
# Packages are created in the `packages` directory.
#
# [nfpm]: https://github.com/goreleaser/nfpm/
# [shiv]: https://github.com/linkedin/shiv

cd $(dirname $0)
NFPM_YAML_TMPL=$PWD/nfpm.yaml.tmpl
GGSHIELD_WRAPPER=$PWD/ggshield-wrapper

# Move to the work-tree root
cd $(git rev-parse --show-toplevel)

# Where `python setup.py ...` places its packages
DIST_DIR=$PWD/dist

# Where npfm places its packages. We do not use $DIST_DIR to ensure the "upload
# to pypi" build step does not try to upload them.
PKG_DIR=$PWD/packages

VERSION=$(python setup.py --version)

GGSHIELD_WHL=$DIST_DIR/ggshield-$VERSION-py3-none-any.whl
GGSHIELD_PYZ=$PKG_DIR/ggshield-$VERSION.pyz

log_progress() {
    local cstart="\e[35m"
    local cend="\e[0m"
    echo -e "${cstart}$*${cend}"
}

build_whl() {
    log_progress "Building wheel"
    python setup.py sdist bdist_wheel
}

build_pyz() {
    log_progress "Building $GGSHIELD_PYZ"
    shiv -c ggshield --reproducible --compile-pyc --compressed -o "$GGSHIELD_PYZ" "$GGSHIELD_WHL"
}

run_nfpm() {
    # nfpm supports environment variables in its configuration file, but only
    # in certain fields.  It does not support them in `contents/src` [1], so we
    # need to do a search-and-replace for this field. To be consistent, we do
    # this for the `version` field as well, even if this one supports
    # environment variables.
    # [1]: https://github.com/goreleaser/nfpm/issues/449
    local nfpm_yaml=$(mktemp --tmpdir nfpm-XXXXX.yaml)
    sed \
        -e "s,@VERSION@,$VERSION," \
        -e "s,@GGSHIELD_WRAPPER@,$GGSHIELD_WRAPPER," \
        -e "s,@GGSHIELD_PYZ@,$GGSHIELD_PYZ," \
        "$NFPM_YAML_TMPL" > "$nfpm_yaml"

    for format in rpm deb ; do
        log_progress "Building $format"
        nfpm package --packager $format --config "$nfpm_yaml" --target "$PKG_DIR"
    done
    rm "$nfpm_yaml"
}

mkdir -p $PKG_DIR

if [ ! -f "$GGSHIELD_WHL" ] ; then
    build_whl
fi

if [ ! -f "$GGSHIELD_PYZ" ] ; then
    build_pyz
fi

run_nfpm
