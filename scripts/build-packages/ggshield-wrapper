#!/usr/bin/env bash
set -euo pipefail

# This wrapper looks for a recent enough Python interpreter and exits with a
# user-friendly message if it can't find one.
# This is useful when the `python3` interpreter is too old, but the system
# has a more recent `python3.x` interpreter installed.

# The minimum Python version we need
MAJOR=3
MINOR=7

GGSHIELD_PYZ=/usr/lib/ggshield/ggshield.pyz

POSSIBLE_PYTHONS=\
"python311 python3.11
python310 python3.10
python39 python3.9
python38 python3.8
python37 python3.7
python3
python
"

is_python_usable() {
    local python_cmd=$1
    if ! command -v "$python_cmd" > /dev/null ; then
        return 1
    fi
    $python_cmd -c "import sys; sys.exit(0 if sys.version_info >= ($MAJOR, $MINOR) else 1)"
}

for python_cmd in $POSSIBLE_PYTHONS ; do
    if is_python_usable "$python_cmd" ; then
        exec "$python_cmd" $GGSHIELD_PYZ "$@"
    fi
done

echo "Error: could not find a usable Python interpreter. ggshield needs at least Python $MAJOR.$MINOR." >&2
exit 1
