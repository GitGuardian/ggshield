name: Application Release

on:
  push:
    tags:
      - 'v*'

jobs:
  pypi:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: python -m pip install --upgrade pip setuptools wheel
      - name: Build distribution
        run: >-
          python setup.py sdist bdist_wheel
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}

  release:
    runs-on: ubuntu-latest
    continue-on-error: true
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Release Notary Action
        uses: docker://aevea/release-notary:0.9.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build and push
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: gitguardian/ggshield
          tag_with_ref: true

  push_to_github_packages:
    name: Push Docker image to GitHub Packages
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Push to GitHub Packages
        uses: docker/build-push-action@v1
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: gitguardian/gg-shield/ggshield
          tag_with_ref: true

  push_to_tap:
    needs: pypi
    name: Push GitGuardian tap
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    steps:
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Read info
        id: tags
        shell: bash
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}
          echo ::set-output name=TAG::${GITHUB_REF/refs\/tags\//}
      - name: Checkout Homebrew-ggshield
        uses: actions/checkout@master
        with:
          repository: GitGuardian/homebrew-ggshield
          token: ${{ secrets.ACTIONS_TOKEN }}
          path: ./brew

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install ggshield homebrew-pypi-poet
          poet -f ggshield | sed 's/Shiny new formula/Detect secret in sourcecode, scan your repos and docker images for leaks/g' | sed '7a\  license "MIT"' > brew/Formula/ggshield.rb

      - name: Push brew
        run: |
          cd ./brew
          git add Formula/ggshield.rb
          git config user.name github-actions
          git config user.email github-actions@github.com
          git commit -am "update from ggshield"
          git tag ${{ steps.tags.outputs.tag }}
          git push --tags
